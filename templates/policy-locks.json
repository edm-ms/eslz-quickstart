{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "4561207466042146226"
    }
  },
  "parameters": {
    "description": {
      "type": "string",
      "defaultValue": "This initiative deploys resource locks for defined resources"
    },
    "display": {
      "type": "string",
      "defaultValue": "Deploy resource locks for critical resources"
    },
    "name": {
      "type": "string",
      "defaultValue": "Deploy resource locks for critical resources"
    },
    "assignmentName": {
      "type": "string",
      "defaultValue": "Deploy-ResourceLocks"
    },
    "managementGroupName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "eastus"
    },
    "roleIds": {
      "type": "array",
      "defaultValue": [
        "/providers/Microsoft.Authorization/roleDefinitions/f9e39ccf-c9a1-437b-90da-b7b5497b514a"
      ]
    }
  },
  "functions": [],
  "variables": {
    "lockValues": "[json('[\r\n    {\r\n      \"nameFormat\": \"azb-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Azure Bastion\",\r\n      \"resourceType\": \"Microsoft.Network/bastionHosts\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"azfw-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Azure Firewall\",\r\n      \"resourceType\": \"Microsoft.Network/azureFirewalls\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"alb-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Azure Load Balancer\",\r\n      \"resourceType\": \"Microsoft.Network/loadBalancers\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"erc-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"ExpressRoute Circuit\",\r\n      \"resourceType\": \"Microsoft.Network/expressRouteCircuits\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"erg-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"ExpressRoute Gateway\",\r\n      \"resourceType\": \"Microsoft.Network/expressRouteGateways\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"fwp-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Firewall Policy\",\r\n      \"resourceType\": \"Microsoft.Network/firewallPolicies\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"kv-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Key Vaults\",\r\n      \"resourceType\": \"Microsoft.KeyVault/vaults\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"law-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Log Analytics Workspace\",\r\n      \"resourceType\": \"Microsoft.OperationalInsights/workspaces\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"nsg-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Network Security Groups\",\r\n      \"resourceType\": \"Microsoft.Network/networkSecurityGroups\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"pl-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Private Link\",\r\n      \"resourceType\": \"Microsoft.Network/privateEndpoints\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"pip-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Public IP Addresses\",\r\n      \"resourceType\": \"Microsoft.Network/publicIPAddresses\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"rsv-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Recovery Services Vault\",\r\n      \"resourceType\": \"Microsoft.RecoveryServices/vaults\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"rt-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Route Tables\",\r\n      \"resourceType\": \"Microsoft.Network/routeTables\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"syn-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Synapse\",\r\n      \"resourceType\": \"Microsoft.Synapse/workspaces\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"uai-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"User Assigned Identity\",\r\n      \"resourceType\": \"Microsoft.ManagedIdentity/userAssignedIdentities\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"vpng-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"VPN Gateway\",\r\n      \"resourceType\": \"Microsoft.Network/vpnGateways\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"vng-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Virtual Network Gateway\",\r\n      \"resourceType\": \"Microsoft.Network/virtualNetworkGateways\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"vnet-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Virtual Networks\",\r\n      \"resourceType\": \"Microsoft.Network/virtualNetworks\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"vw-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Virtual WAN\",\r\n      \"resourceType\": \"Microsoft.Network/virtualWans\"\r\n    },\r\n    {\r\n      \"nameFormat\": \"vwh-prod-*\",\r\n      \"policyMode\": \"Indexed\",\r\n      \"resource\": \"Virtual WAN Hub\",\r\n      \"resourceType\": \"Microsoft.Network/virtualHubs\"\r\n    }\r\n  ]')]"
  },
  "resources": [
    {
      "copy": {
        "name": "locks",
        "count": "[length(range(0, length(variables('lockValues'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('lock-{0}', variables('lockValues')[range(0, length(variables('lockValues')))[copyIndex()]].resource)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourceType": {
            "value": "[variables('lockValues')[range(0, length(variables('lockValues')))[copyIndex()]].resourceType]"
          },
          "resourceName": {
            "value": "[variables('lockValues')[range(0, length(variables('lockValues')))[copyIndex()]].resource]"
          },
          "roleIds": {
            "value": "[parameters('roleIds')]"
          },
          "managementGroup": {
            "value": "[parameters('managementGroupName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "630625539441772732"
            }
          },
          "parameters": {
            "resourceType": {
              "type": "string"
            },
            "resourceName": {
              "type": "string"
            },
            "mode": {
              "type": "string",
              "defaultValue": "Indexed"
            },
            "roleIds": {
              "type": "array"
            },
            "managementGroup": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2020-09-01",
              "name": "[format('Deploy resource lock for {0}', parameters('resourceName'))]",
              "properties": {
                "description": "[format('This policy deploys resource locks for {0}s', parameters('resourceName'))]",
                "displayName": "[format('Deploy resource lock for {0}s', parameters('resourceName'))]",
                "mode": "[parameters('mode')]",
                "policyRule": {
                  "if": {
                    "allOf": [
                      {
                        "field": "type",
                        "equals": "[parameters('resourceType')]"
                      }
                    ]
                  },
                  "then": {
                    "effect": "deployIfNotExists",
                    "details": {
                      "type": "Microsoft.Authorization/locks",
                      "roleDefinitionIds": "[parameters('roleIds')]",
                      "existenceCondition": {
                        "field": "Microsoft.Authorization/locks/level",
                        "equals": "CanNotDelete"
                      },
                      "deployment": {
                        "properties": {
                          "mode": "incremental",
                          "parameters": {
                            "resourceName": {
                              "value": "[[field('name')]"
                            },
                            "resourceType": {
                              "value": "[parameters('resourceType')]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
                            "contentVersion": "1.0.0.0",
                            "parameters": {
                              "resourceName": {
                                "type": "string"
                              },
                              "resourceType": {
                                "type": "string"
                              }
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Authorization/locks",
                                "scope": "[[concat(parameters('resourceType'), parameters('resourceName'))]",
                                "name": "setByPolicy",
                                "apiVersion": "2017-04-01",
                                "properties": {
                                  "level": "CanNotDelete",
                                  "notes": "Lock applied by Azure Policy"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "policyId": {
              "type": "string",
              "value": "[format('Microsoft.Authorization/policyDefinitions/{0}', format('Deploy resource lock for {0}', parameters('resourceName')))]"
            },
            "policyIdFull": {
              "type": "string",
              "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/{1}', parameters('managementGroup'), format('Microsoft.Authorization/policyDefinitions/{0}', format('Deploy resource lock for {0}', parameters('resourceName'))))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "initiative",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "description": {
            "value": "[parameters('description')]"
          },
          "displayName": {
            "value": "[parameters('display')]"
          },
          "initiativeName": {
            "value": "[parameters('name')]"
          },
          "managementGroupName": {
            "value": "[parameters('managementGroupName')]"
          },
          "parameters": {
            "value": {}
          },
          "policyDefinitions": {
            "copy": [
              {
                "name": "value",
                "count": "[length(range(0, length(variables('lockValues'))))]",
                "input": "[createObject('policyDefinitionId', reference(format('Microsoft.Resources/deployments/{0}', format('lock-{0}', variables('lockValues')[range(0, length(variables('lockValues')))[range(0, length(variables('lockValues')))[copyIndex('value')]]].resource)), '2019-10-01').outputs.policyIdFull.value)]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "2492611835668875973"
            }
          },
          "parameters": {
            "initiativeName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "parameters": {
              "type": "object"
            },
            "policyDefinitions": {
              "type": "array"
            },
            "managementGroupName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Authorization/policySetDefinitions",
              "apiVersion": "2020-09-01",
              "name": "[parameters('initiativeName')]",
              "properties": {
                "description": "[parameters('description')]",
                "displayName": "[parameters('displayName')]",
                "policyType": "Custom",
                "parameters": "[parameters('parameters')]",
                "policyDefinitions": "[parameters('policyDefinitions')]"
              }
            }
          ],
          "outputs": {
            "policyInitiativeId": {
              "type": "string",
              "value": "[format('/providers/Microsoft.Management/managementGroups/{0}/providers/{1}', parameters('managementGroupName'), format('Microsoft.Authorization/policySetDefinitions/{0}', parameters('initiativeName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "locks"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "assignPolicy",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nonComplianceMessage": {
            "value": "Please apply resource lock"
          },
          "policyAssignmentEnforcementMode": {
            "value": "Default"
          },
          "policyAssignmentName": {
            "value": "[parameters('assignmentName')]"
          },
          "policyDefinitionId": {
            "value": "[reference(format('Microsoft.Resources/deployments/{0}', 'initiative'), '2019-10-01').outputs.policyInitiativeId.value]"
          },
          "policyDescription": {
            "value": "[parameters('description')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "4092889373440418278"
            }
          },
          "parameters": {
            "policyAssignmentEnforcementMode": {
              "type": "string",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Input will determine if the policyAssignment should be enforced or not."
              }
            },
            "policyDefinitionId": {
              "type": "string"
            },
            "policyAssignmentName": {
              "type": "string"
            },
            "policyDescription": {
              "type": "string"
            },
            "policyParameters": {
              "type": "object",
              "defaultValue": {}
            },
            "exclusions": {
              "type": "array",
              "defaultValue": []
            },
            "nonComplianceMessage": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2020-09-01",
              "name": "[parameters('policyAssignmentName')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "location": "[parameters('location')]",
              "properties": {
                "description": "[parameters('policyDescription')]",
                "displayName": "[parameters('policyDescription')]",
                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                "enforcementMode": "[parameters('policyAssignmentEnforcementMode')]",
                "parameters": "[parameters('policyParameters')]",
                "notScopes": "[parameters('exclusions')]",
                "nonComplianceMessages": [
                  {
                    "message": "[parameters('nonComplianceMessage')]"
                  }
                ]
              }
            }
          ],
          "outputs": {
            "policyIdentity": {
              "type": "string",
              "value": "[reference(format('Microsoft.Authorization/policyAssignments/{0}', parameters('policyAssignmentName')), '2020-09-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[format('Microsoft.Resources/deployments/{0}', 'initiative')]"
      ]
    }
  ]
}